[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.6266627311706543, 0.2997538447380066,
		0.13363958895206451, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.30000001192092896);
	float node0_in5_specular = float(0.5);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(0.4000000059604645);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.0);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="ArrayMesh"]

resource_name = "Circle"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.388838, 0.224495, 0.375, 0.431744, 0.106278, 0.375, 0.816025, 0.471132, 0.375, 0.30541, -0.323744, 0.375, 0.816025, -0.471132, 0.375, 0.388838, -0.224496, 0.375, -0.816025, -0.471133, 0.375, -0.431445, -0.108457, 0.375, -0.431744, 0.106279, 0.375, 7.82311e-08, -0.942265, 0.375, -0.121358, -0.429723, 0.375, -0.30541, -0.323744, 0.375, 3.9761e-08, 0.395216, 0.325, 0.135172, 0.371381, -0.0125, 0.135172, 0.371381, 0.325, -0.389212, -0.0686285, 0.325, -0.389212, 0.0686285, -0.0125, -0.389212, 0.0686285, 0.325, 0.135172, -0.371382, 0.325, -1.9915e-08, -0.395216, -0.0125, -1.9915e-08, -0.395216, 0.325, 0.389212, 0.0686284, 0.325, 0.389212, -0.0686287, -0.0125, 0.389212, -0.0686287, 0.325, -0.135172, -0.371382, -0.0125, -0.135172, -0.371382, 0.325, -9.92042e-09, -0.450924, 0.375, 0.121358, -0.429723, 0.375, 0.431445, -0.108457, 0.375, -0.388838, -0.224496, 0.375, -0.25404, -0.302753, 0.325, -0.342267, -0.197608, -0.0125, -0.342267, -0.197608, 0.325, 0.25404, -0.302753, 0.325, 0.135172, -0.371382, -0.0125, -0.816025, 0.471132, 0.375, 0.309649, 0.319414, 0.375, -0.25404, 0.302753, 0.325, -0.135172, 0.371382, -0.0125, -0.135172, 0.371382, 0.325, -0.388838, 0.224496, 0.375, 0.131035, 0.422882, 0.375, -0.389212, -0.0686285, -0.0125, -0.309649, 0.319414, 0.375, -7.45058e-09, 0.942265, 0.375, 3.53793e-08, 0.445987, 0.375, -0.131034, 0.422883, 0.375, 0.0268282, 0.9676, 0.360355, -0.0282085, 0.966804, 0.360355, -0.000784475, 0.984886, 0.325, 0.0433013, 0.975, 0.325, -0.0460617, 0.973406, 0.325, -0.85473, 0.493479, 0.325, -0.819375, 0.508422, 0.360355, -0.822724, 0.525, 0.325, -0.849993, 0.455389, 0.360355, -0.866025, 0.45, 0.325, -0.85473, -0.493479, 0.325, -0.849993, -0.455389, 0.360355, -0.866025, -0.45, 0.325, -0.819375, -0.508422, 0.360355, -0.822724, -0.525, 0.325, 9.22617e-08, -0.986957, 0.325, -0.0306185, -0.96381, 0.360355, -0.0433012, -0.975, 0.325, 0.0306187, -0.96381, 0.360355, 0.0433014, -0.975, 0.325, 0.852544, -0.493122, 0.325, 0.823172, -0.507831, 0.360355, 0.819964, -0.526594, 0.325, 0.851381, -0.460566, 0.360355, 0.866025, -0.45, 0.325, 0.85473, 0.493479, 0.325, 0.849993, 0.455388, 0.360355, 0.866025, 0.45, 0.325, 0.819375, 0.508421, 0.360355, 0.822724, 0.525, 0.325, -0.000812667, 0.984878, -0.0125, -0.0461169, 0.973374, -0.0125, 0.0433013, 0.975, -0.0125, 0.852523, -0.493143, -0.0125, 0.866025, -0.45, -0.0125, 0.819908, -0.526625, -0.0125, -0.854036, -0.493078, -0.0125, -0.822724, -0.525, -0.0125, -0.866025, -0.45, -0.0125, -0.13396, 0.386466, 0.360356, 3.84753e-08, 0.410087, 0.360356, -0.270327, 0.307633, 0.360356, -0.355907, 0.205483, 0.360355, -0.342267, 0.197608, 0.325, -0.401669, 0.079656, 0.360355, -0.401582, -0.0802939, 0.360355, -0.355907, -0.205483, 0.360355, -0.269086, -0.308901, 0.360355, -0.131126, -0.388469, 0.360355, -1.69966e-08, -0.411532, 0.360355, 0.131126, -0.388469, 0.360355, 0.269086, -0.308901, 0.360355, 0.355907, -0.205483, 0.360355, 0.342267, -0.197608, 0.325, 0.401582, -0.080294, 0.360355, 0.401669, 0.0796558, 0.360355, 0.355907, 0.205483, 0.360356, 0.342267, 0.197608, 0.325, 0.270328, 0.307633, 0.360356, 0.25404, 0.302753, 0.325, 0.13396, 0.386466, 0.360356, 0.342267, 0.197608, -0.0125, -0.342267, 0.197608, -0.0125, 0.342267, -0.197608, -0.0125, -0.25404, -0.302753, -0.0125, 0.25404, 0.302753, -0.0125, 0.389212, 0.0686284, -0.0125, 3.9761e-08, 0.395216, -0.0125, -0.25404, 0.302753, -0.0125, 0.25404, -0.302753, -0.0125, -0.854036, 0.493078, -0.0125, -0.822724, 0.525, -0.0125, 8.53072e-08, -0.986156, -0.0125, -0.0433012, -0.975, -0.0125, 0.854036, 0.493078, -0.0125, 0.866025, 0.45, -0.0125, 0.388838, 0.224495, -0.375, 0.816025, 0.471132, -0.375, 0.431744, 0.106278, -0.375, 0.30541, -0.323744, -0.375, 0.388838, -0.224496, -0.375, 0.816025, -0.471132, -0.375, -0.816025, -0.471133, -0.375, -0.431744, 0.106279, -0.375, -0.431445, -0.108457, -0.375, 7.82311e-08, -0.942265, -0.375, -0.30541, -0.323744, -0.375, -0.121358, -0.429723, -0.375, 0.135172, 0.371381, 0.0125, 3.9761e-08, 0.395216, -0.325, 0.135172, 0.371381, -0.325, -0.389212, 0.0686285, 0.0125, -0.389212, -0.0686285, -0.325, -0.389212, 0.0686285, -0.325, -1.9915e-08, -0.395216, 0.0125, 0.135172, -0.371382, -0.325, -1.9915e-08, -0.395216, -0.325, 0.389212, -0.0686287, 0.0125, 0.389212, 0.0686284, -0.325, 0.389212, -0.0686287, -0.325, -0.135172, -0.371382, 0.0125, -0.135172, -0.371382, -0.325, -9.92042e-09, -0.450924, -0.375, 0.121358, -0.429723, -0.375, 0.431445, -0.108457, -0.375, -0.388838, -0.224496, -0.375, -0.342267, -0.197608, 0.0125, -0.25404, -0.302753, -0.325, -0.342267, -0.197608, -0.325, 0.135172, -0.371382, 0.0125, 0.25404, -0.302753, -0.325, -0.816025, 0.471132, -0.375, 0.309649, 0.319414, -0.375, -0.135172, 0.371382, 0.0125, -0.25404, 0.302753, -0.325, -0.135172, 0.371382, -0.325, -0.388838, 0.224496, -0.375, 0.131035, 0.422882, -0.375, -0.389212, -0.0686285, 0.0125, -0.309649, 0.319414, -0.375, -7.45058e-09, 0.942265, -0.375, 3.53793e-08, 0.445987, -0.375, -0.131034, 0.422883, -0.375, -0.0282085, 0.966804, -0.360355, 0.0268282, 0.9676, -0.360355, -0.000784475, 0.984886, -0.325, 0.0433013, 0.975, -0.325, -0.0460617, 0.973406, -0.325, -0.819375, 0.508422, -0.360355, -0.85473, 0.493479, -0.325, -0.822724, 0.525, -0.325, -0.849993, 0.455389, -0.360355, -0.866025, 0.45, -0.325, -0.849993, -0.455389, -0.360355, -0.85473, -0.493479, -0.325, -0.866025, -0.45, -0.325, -0.819375, -0.508422, -0.360355, -0.822724, -0.525, -0.325, -0.0306185, -0.96381, -0.360355, 9.22617e-08, -0.986957, -0.325, -0.0433012, -0.975, -0.325, 0.0306187, -0.96381, -0.360355, 0.0433014, -0.975, -0.325, 0.823172, -0.507831, -0.360355, 0.852544, -0.493122, -0.325, 0.819964, -0.526594, -0.325, 0.851381, -0.460566, -0.360355, 0.866025, -0.45, -0.325, 0.849993, 0.455388, -0.360355, 0.85473, 0.493479, -0.325, 0.866025, 0.45, -0.325, 0.819375, 0.508421, -0.360355, 0.822724, 0.525, -0.325, -0.000812667, 0.984878, 0.0125, -0.0461169, 0.973374, 0.0125, 0.0433013, 0.975, 0.0125, 0.852523, -0.493143, 0.0125, 0.866025, -0.45, 0.0125, 0.819908, -0.526625, 0.0125, -0.854036, -0.493078, 0.0125, -0.822724, -0.525, 0.0125, -0.866025, -0.45, 0.0125, -0.13396, 0.386466, -0.360356, 3.84753e-08, 0.410087, -0.360356, -0.270327, 0.307633, -0.360356, -0.355907, 0.205483, -0.360355, -0.342267, 0.197608, -0.325, -0.401669, 0.079656, -0.360355, -0.401582, -0.0802939, -0.360355, -0.355907, -0.205483, -0.360355, -0.269086, -0.308901, -0.360355, -0.131126, -0.388469, -0.360355, -1.69966e-08, -0.411532, -0.360355, 0.131126, -0.388469, -0.360355, 0.269086, -0.308901, -0.360355, 0.355907, -0.205483, -0.360355, 0.342267, -0.197608, -0.325, 0.401582, -0.080294, -0.360355, 0.401669, 0.0796558, -0.360355, 0.355907, 0.205483, -0.360356, 0.342267, 0.197608, -0.325, 0.270328, 0.307633, -0.360356, 0.25404, 0.302753, -0.325, 0.13396, 0.386466, -0.360356, 0.342267, 0.197608, 0.0125, -0.342267, 0.197608, 0.0125, 0.342267, -0.197608, 0.0125, -0.25404, -0.302753, 0.0125, 0.25404, 0.302753, 0.0125, 0.389212, 0.0686284, 0.0125, 3.9761e-08, 0.395216, 0.0125, -0.25404, 0.302753, 0.0125, 0.25404, -0.302753, 0.0125, -0.854036, 0.493078, 0.0125, -0.822724, 0.525, 0.0125, 8.53072e-08, -0.986156, 0.0125, -0.0433012, -0.975, 0.0125, 0.854036, 0.493078, 0.0125, 0.866025, 0.45, 0.0125, -0.000583352, 0.978139, 0.353868, -0.846309, 0.488616, 0.353868, -0.846308, -0.488617, 0.353868, 8.95381e-08, -0.977233, 0.353868, 0.846801, -0.489574, 0.353868, 0.846309, 0.488616, 0.353868, -0.866025, 0.45, -0.0125, 0.0433013, -0.975, -0.0125, 0.822724, 0.525, -0.0125, -0.000583352, 0.978139, -0.353868, -0.846309, 0.488616, -0.353868, -0.846308, -0.488617, -0.353868, 8.95381e-08, -0.977233, -0.353868, 0.846801, -0.489574, -0.353868, 0.846309, 0.488616, -0.353868, -0.866025, 0.45, 0.0125, 0.0433013, -0.975, 0.0125, 0.822724, 0.525, 0.0125),
		Vector3Array(-0.141392, -0.0813623, 0.986572, -0.170324, -0.038667, 0.984619, 0.258644, 0.149174, 0.954375, -0.117161, 0.128056, 0.984802, 0.233619, -0.135441, 0.962828, -0.141179, 0.0817591, 0.986572, -0.258583, -0.149266, 0.954375, 0.168889, 0.0393384, 0.984832, 0.170232, -0.038667, 0.984619, -0.000122074, -0.298593, 0.954375, 0.0490432, 0.16129, 0.985687, 0.11713, 0.127995, 0.984802, 0.0, -0.979339, 0.202124, -0.34199, -0.939665, 0.0, -0.344768, -0.919889, 0.186773, 0.969024, 0.157109, 0.190497, 0.984802, -0.17362, 0.0, 0.968902, -0.15775, 0.190588, -0.348369, 0.916562, 0.196295, 0.0, 1.0, 0.0, 6.1037e-05, 0.975555, 0.219703, -0.968841, -0.157811, 0.190741, -0.984802, 0.17362, 0.0, -0.968963, 0.157109, 0.19071, 0.34199, 0.939665, 0.0, 0.34843, 0.916562, 0.196142, 6.1037e-05, 0.157964, 0.987426, -0.0491348, 0.161382, 0.985656, -0.169164, 0.0392773, 0.984802, 0.141087, 0.081637, 0.986602, 0.621937, 0.75869, 0.193793, 0.866024, 0.499985, 0.0, 0.846156, 0.488571, 0.212806, -0.621967, 0.758629, 0.193884, -0.34199, 0.939665, 0.0, -0.258553, 0.149266, 0.954375, -0.118595, -0.126835, 0.984802, 0.620563, -0.760613, 0.190497, 0.34199, -0.939665, 0.0, 0.34489, -0.919858, 0.186651, 0.14124, -0.0813623, 0.986602, -0.0554826, -0.172582, 0.983428, 0.984802, 0.17362, 0.0, 0.118534, -0.12656, 0.984832, -0.000762963, 0.270028, 0.962828, 0.0, -0.171697, 0.985137, 0.0555132, -0.172521, 0.983428, 0.245857, 0.698019, 0.672506, -0.254952, 0.694174, 0.673116, -0.0136113, 0.990966, 0.133305, 0.371197, 0.91174, 0.175787, -0.383526, 0.906644, 0.175695, -0.852901, 0.491989, 0.174505, -0.451277, 0.561235, 0.693777, -0.588458, 0.783471, 0.199622, -0.711814, 0.109836, 0.693686, -0.972777, 0.117862, 0.199377, -0.852535, -0.49263, 0.174505, -0.711814, -0.109836, 0.693686, -0.972716, -0.117496, 0.199896, -0.451033, -0.561541, 0.693686, -0.588488, -0.783502, 0.199377, 0.000366222, -0.984649, 0.174505, -0.26075, -0.671377, 0.693686, -0.384594, -0.901151, 0.199896, 0.260628, -0.67159, 0.693533, 0.384289, -0.901395, 0.199377, 0.851375, -0.507279, 0.133305, 0.473678, -0.568133, 0.672903, 0.593036, -0.785668, 0.176061, 0.727226, -0.136204, 0.672719, 0.975188, -0.1348, 0.175451, 0.852535, 0.49263, 0.174505, 0.711661, 0.110172, 0.693777, 0.972747, 0.117862, 0.199622, 0.451277, 0.56151, 0.693533, 0.588488, 0.783502, 0.199377, -0.0141606, 0.999878, -3.05185e-05, -0.376598, 0.926359, 0.0, 0.363414, 0.931608, 0.0, 0.858821, -0.512223, 0.0, 0.988495, -0.151067, 0.0, 0.613941, -0.789331, 0.0, -0.865658, -0.500626, -0.00128178, -0.612568, -0.790399, 0.0, -0.990875, -0.134556, -0.00103763, 0.245003, -0.659627, 0.710501, 0.0, -0.680502, 0.732719, 0.444807, -0.537156, 0.716636, 0.576067, -0.332286, 0.746757, 0.846187, -0.488479, 0.212806, 0.687857, -0.11594, 0.716483, 0.687613, 0.116611, 0.716636, 0.575823, 0.332743, 0.746757, 0.441877, 0.533525, 0.721152, 0.239479, 0.645802, 0.724937, 0.000152593, 0.655446, 0.755211, -0.239448, 0.645802, 0.724937, -0.441939, 0.533433, 0.721183, -0.575701, 0.332957, 0.746788, -0.846065, 0.488662, 0.212958, -0.687613, 0.116581, 0.716605, -0.687796, -0.116092, 0.716544, -0.576189, -0.332072, 0.746788, -0.846217, -0.488388, 0.212958, -0.444777, -0.537187, 0.716636, -0.620563, -0.760582, 0.19071, -0.244758, -0.659688, 0.710532, -0.866024, -0.499985, 0.0, 0.866024, -0.499985, 0.0, -0.866024, 0.499985, 0.0, 0.642781, 0.766015, 0.0, -0.642781, -0.766015, 0.0, -0.984802, -0.17362, 0.0, 0.0, -1.0, 0.0, 0.642781, -0.766015, 0.0, -0.642781, 0.766015, 0.0, -0.866359, 0.499344, -0.00128178, -0.611988, 0.790826, -0.00103763, 0.000701926, -0.999969, -0.00128178, -0.378887, -0.925413, -0.00103763, 0.865658, 0.500626, -0.00128178, 0.990875, 0.134556, -0.00103763, -0.141392, -0.0813623, -0.986572, 0.258644, 0.149174, -0.954375, -0.170324, -0.038667, -0.984619, -0.117161, 0.128056, -0.984802, -0.141179, 0.0817591, -0.986572, 0.233619, -0.135441, -0.962828, -0.258583, -0.149266, -0.954375, 0.170232, -0.038667, -0.984619, 0.168889, 0.0393384, -0.984832, -0.000122074, -0.298593, -0.954375, 0.11713, 0.127995, -0.984832, 0.0490432, 0.16129, -0.985687, -0.34199, -0.939665, 0.0, 0.0, -0.979339, -0.202124, -0.344768, -0.919889, -0.186773, 0.984802, -0.17362, 0.0, 0.969024, 0.157109, -0.190497, 0.968902, -0.15775, -0.190588, 0.0, 1.0, 0.0, -0.348369, 0.916562, -0.196295, 6.1037e-05, 0.975555, -0.219703, -0.984802, 0.17362, 0.0, -0.968841, -0.157811, -0.190741, -0.968963, 0.157109, -0.19071, 0.34199, 0.939665, 0.0, 0.34843, 0.916562, -0.196142, 6.1037e-05, 0.157964, -0.987426, -0.0491348, 0.161382, -0.985656, -0.169164, 0.0392773, -0.984802, 0.141087, 0.081637, -0.986602, 0.866024, 0.499985, 0.0, 0.621937, 0.75869, -0.193793, 0.846156, 0.488571, -0.212806, -0.34199, 0.939665, 0.0, -0.621967, 0.758629, -0.193884, -0.258553, 0.149266, -0.954375, -0.118595, -0.126835, -0.984802, 0.34199, -0.939665, 0.0, 0.620563, -0.760613, -0.190497, 0.34489, -0.919858, -0.186651, 0.14124, -0.0813623, -0.986602, -0.0554826, -0.172582, -0.983428, 0.984802, 0.17362, 0.0, 0.118534, -0.12656, -0.984832, -0.000762963, 0.270028, -0.962828, 0.0, -0.171697, -0.985137, 0.0555132, -0.172521, -0.983428, -0.254952, 0.694174, -0.673116, 0.245857, 0.698019, -0.672506, -0.0136113, 0.990966, -0.133305, 0.371197, 0.91174, -0.175787, -0.383526, 0.906644, -0.175695, -0.451277, 0.561235, -0.693777, -0.852901, 0.491989, -0.174505, -0.588458, 0.783471, -0.199622, -0.711814, 0.109836, -0.693686, -0.972777, 0.117862, -0.199377, -0.711814, -0.109836, -0.693686, -0.852535, -0.49263, -0.174505, -0.972716, -0.117496, -0.199896, -0.451033, -0.561541, -0.693686, -0.588488, -0.783502, -0.199377, -0.26075, -0.671377, -0.693686, 0.000366222, -0.984649, -0.174505, -0.384594, -0.901151, -0.199896, 0.260628, -0.67159, -0.693533, 0.384289, -0.901395, -0.199377, 0.473678, -0.568133, -0.672903, 0.851375, -0.507279, -0.133305, 0.593036, -0.785668, -0.176061, 0.727226, -0.136204, -0.672719, 0.975188, -0.1348, -0.175451, 0.711661, 0.110172, -0.693777, 0.852535, 0.49263, -0.174505, 0.972747, 0.117862, -0.199622, 0.451277, 0.56151, -0.693533, 0.588488, 0.783502, -0.199377, -0.0141606, 0.999878, 3.05185e-05, -0.376598, 0.926359, 0.0, 0.363414, 0.931608, 0.0, 0.858821, -0.512223, 0.0, 0.988495, -0.151067, 0.0, 0.613941, -0.789331, 0.0, -0.865658, -0.500626, 0.00128178, -0.612568, -0.790399, 0.0, -0.990875, -0.134556, 0.00103763, 0.245003, -0.659627, -0.710501, 0.0, -0.680502, -0.732719, 0.444807, -0.537156, -0.716636, 0.576067, -0.332286, -0.746757, 0.846187, -0.488479, -0.212806, 0.687857, -0.11594, -0.716483, 0.687613, 0.116611, -0.716636, 0.575823, 0.332743, -0.746757, 0.441877, 0.533525, -0.721152, 0.239479, 0.645802, -0.724937, 0.000152593, 0.655446, -0.755211, -0.239448, 0.645802, -0.724937, -0.441939, 0.533433, -0.721183, -0.575701, 0.332957, -0.746788, -0.846065, 0.488662, -0.212958, -0.687613, 0.116581, -0.716605, -0.687796, -0.116092, -0.716544, -0.576189, -0.332072, -0.746788, -0.846217, -0.488388, -0.212958, -0.444777, -0.537187, -0.716636, -0.620563, -0.760582, -0.19071, -0.244758, -0.659688, -0.710532, -0.866024, -0.499985, 0.0, 0.866024, -0.499985, 0.0, -0.866024, 0.499985, 0.0, 0.642781, 0.766015, 0.0, -0.642781, -0.766015, 0.0, -0.984802, -0.17362, 0.0, 0.0, -1.0, 0.0, 0.642781, -0.766015, 0.0, -0.642781, 0.766015, 0.0, -0.866359, 0.499344, 0.00128178, -0.611988, 0.790826, 0.00103763, 0.000701926, -0.999969, 0.00128178, -0.378887, -0.925413, 0.00103763, 0.865658, 0.500626, 0.00128178, 0.990875, 0.134556, 0.00103763, -0.00961333, 0.85757, 0.514267, -0.701163, 0.404797, 0.586901, -0.701163, -0.404797, 0.586901, 0.0, -0.809626, 0.586901, 0.737846, -0.437086, 0.514267, 0.701163, 0.404797, 0.586901, -0.990783, 0.135289, 0.0, 0.378216, -0.925687, 0.0, 0.612568, 0.790399, 0.0, -0.00961333, 0.85757, -0.514267, -0.701163, 0.404797, -0.586901, -0.701163, -0.404797, -0.586901, 0.0, -0.809626, -0.586901, 0.737846, -0.437086, -0.514267, 0.701163, 0.404797, -0.586901, -0.990783, 0.135289, 0.0, 0.378216, -0.925687, 0.0, 0.612568, 0.790399, 0.0),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 15, 17, 16, 18, 20, 19, 21, 23, 22, 20, 25, 24, 26, 27, 9, 9, 10, 26, 27, 3, 9, 9, 3, 4, 6, 11, 9, 28, 4, 5, 29, 11, 6, 28, 1, 4, 30, 32, 31, 29, 6, 7, 4, 1, 2, 33, 18, 34, 35, 8, 6, 36, 2, 0, 37, 39, 38, 35, 40, 8, 41, 2, 36, 32, 15, 42, 35, 43, 40, 2, 41, 44, 45, 46, 44, 44, 46, 35, 44, 41, 45, 47, 44, 48, 49, 50, 47, 48, 51, 49, 52, 54, 53, 55, 56, 52, 53, 35, 55, 57, 59, 58, 60, 61, 57, 58, 6, 60, 62, 64, 63, 65, 66, 62, 63, 9, 65, 67, 69, 68, 70, 71, 67, 68, 4, 70, 72, 74, 73, 75, 76, 72, 73, 2, 75, 44, 35, 53, 48, 53, 54, 35, 6, 58, 55, 58, 59, 6, 9, 63, 60, 63, 64, 9, 4, 68, 65, 68, 69, 4, 2, 73, 70, 73, 74, 2, 44, 47, 75, 47, 50, 51, 78, 77, 49, 77, 79, 71, 81, 80, 67, 80, 82, 61, 84, 83, 57, 83, 85, 35, 46, 43, 12, 39, 86, 87, 86, 46, 39, 37, 88, 86, 88, 43, 37, 90, 89, 88, 89, 40, 90, 17, 91, 89, 91, 8, 17, 15, 92, 91, 92, 7, 15, 32, 93, 92, 93, 29, 32, 30, 94, 93, 94, 11, 30, 25, 95, 94, 95, 10, 25, 20, 96, 95, 96, 26, 20, 18, 97, 96, 97, 27, 18, 33, 98, 97, 98, 3, 33, 100, 99, 98, 99, 5, 100, 23, 101, 99, 101, 28, 23, 21, 102, 101, 102, 1, 21, 104, 103, 102, 103, 0, 104, 106, 105, 103, 105, 36, 106, 14, 107, 105, 107, 41, 14, 12, 87, 107, 87, 45, 106, 104, 108, 17, 90, 109, 23, 100, 110, 25, 30, 111, 14, 106, 112, 104, 21, 113, 39, 12, 114, 90, 37, 115, 100, 33, 116, 117, 52, 56, 118, 54, 52, 119, 62, 66, 120, 64, 62, 121, 72, 76, 122, 74, 72, 76, 50, 79, 56, 59, 85, 71, 74, 122, 66, 69, 82, 61, 64, 120, 51, 54, 118, 123, 125, 124, 126, 128, 127, 129, 131, 130, 132, 134, 133, 135, 137, 136, 138, 140, 139, 141, 143, 142, 144, 146, 145, 147, 148, 143, 149, 132, 150, 132, 149, 134, 150, 132, 126, 132, 128, 126, 129, 132, 133, 151, 127, 128, 152, 129, 133, 151, 128, 125, 153, 155, 154, 152, 131, 129, 128, 124, 125, 156, 142, 157, 158, 129, 130, 159, 123, 124, 160, 162, 161, 158, 130, 163, 164, 159, 124, 165, 139, 155, 158, 163, 166, 124, 167, 164, 168, 167, 169, 167, 158, 169, 167, 168, 164, 170, 167, 171, 171, 173, 172, 172, 174, 170, 175, 177, 176, 176, 179, 178, 178, 158, 175, 180, 182, 181, 181, 184, 183, 183, 129, 180, 185, 187, 186, 186, 189, 188, 188, 132, 185, 190, 192, 191, 191, 194, 193, 193, 128, 190, 195, 197, 196, 196, 199, 198, 198, 124, 195, 175, 158, 167, 177, 175, 170, 180, 129, 158, 182, 180, 178, 185, 132, 129, 187, 185, 183, 190, 128, 132, 192, 190, 188, 195, 124, 128, 197, 195, 193, 171, 167, 124, 173, 171, 198, 200, 201, 174, 202, 200, 172, 203, 204, 194, 205, 203, 191, 206, 207, 184, 208, 206, 181, 158, 166, 169, 209, 162, 136, 169, 209, 210, 211, 161, 162, 166, 211, 209, 212, 213, 161, 163, 212, 211, 214, 140, 213, 130, 214, 212, 215, 139, 140, 131, 215, 214, 216, 155, 139, 152, 216, 215, 217, 154, 155, 133, 217, 216, 218, 148, 154, 134, 218, 217, 219, 143, 148, 149, 219, 218, 220, 142, 143, 150, 220, 219, 221, 157, 142, 126, 221, 220, 222, 223, 157, 127, 222, 221, 224, 146, 223, 151, 224, 222, 225, 145, 146, 125, 225, 224, 226, 227, 145, 123, 226, 225, 228, 229, 227, 159, 228, 226, 230, 137, 229, 164, 230, 228, 210, 136, 137, 168, 210, 230, 231, 227, 229, 232, 213, 140, 233, 223, 146, 234, 154, 148, 235, 229, 137, 236, 145, 227, 237, 136, 162, 238, 161, 213, 239, 157, 223, 179, 176, 240, 176, 177, 241, 189, 186, 242, 186, 187, 243, 199, 196, 244, 196, 197, 245, 202, 173, 199, 208, 182, 179, 245, 197, 194, 205, 192, 189, 243, 187, 184, 241, 177, 174, 12, 13, 114, 15, 16, 42, 18, 19, 34, 21, 22, 113, 20, 24, 19, 30, 31, 111, 33, 34, 116, 37, 38, 115, 32, 42, 31, 47, 48, 246, 49, 47, 246, 48, 49, 246, 52, 53, 247, 55, 52, 247, 53, 55, 247, 57, 58, 248, 60, 57, 248, 58, 60, 248, 62, 63, 249, 65, 62, 249, 63, 65, 249, 67, 68, 250, 70, 67, 250, 68, 70, 250, 72, 73, 251, 75, 72, 251, 73, 75, 251, 44, 53, 48, 48, 54, 51, 35, 58, 55, 55, 59, 56, 6, 63, 60, 60, 64, 61, 9, 68, 65, 65, 69, 66, 4, 73, 70, 70, 74, 71, 2, 47, 75, 75, 50, 76, 51, 77, 49, 49, 79, 50, 71, 80, 67, 67, 82, 69, 61, 83, 57, 57, 85, 59, 12, 86, 87, 87, 46, 45, 39, 88, 86, 86, 43, 46, 37, 89, 88, 88, 40, 43, 90, 91, 89, 89, 8, 40, 17, 92, 91, 91, 7, 8, 15, 93, 92, 92, 29, 7, 32, 94, 93, 93, 11, 29, 30, 95, 94, 94, 10, 11, 25, 96, 95, 95, 26, 10, 20, 97, 96, 96, 27, 26, 18, 98, 97, 97, 3, 27, 33, 99, 98, 98, 5, 3, 100, 101, 99, 99, 28, 5, 23, 102, 101, 101, 1, 28, 21, 103, 102, 102, 0, 1, 104, 105, 103, 103, 36, 0, 106, 107, 105, 105, 41, 36, 14, 87, 107, 107, 45, 41, 106, 108, 112, 17, 109, 16, 23, 110, 22, 25, 111, 24, 14, 112, 13, 104, 113, 108, 39, 114, 38, 90, 115, 109, 100, 116, 110, 117, 56, 252, 118, 52, 117, 119, 66, 253, 120, 62, 119, 121, 76, 254, 122, 72, 121, 76, 79, 254, 56, 85, 252, 71, 122, 81, 66, 82, 253, 61, 120, 84, 51, 118, 78, 135, 136, 237, 138, 139, 165, 141, 142, 156, 144, 145, 236, 147, 143, 141, 153, 154, 234, 156, 157, 239, 160, 161, 238, 165, 155, 153, 170, 171, 255, 171, 172, 255, 172, 170, 255, 175, 176, 256, 176, 178, 256, 178, 175, 256, 180, 181, 257, 181, 183, 257, 183, 180, 257, 185, 186, 258, 186, 188, 258, 188, 185, 258, 190, 191, 259, 191, 193, 259, 193, 190, 259, 195, 196, 260, 196, 198, 260, 198, 195, 260, 175, 167, 170, 177, 170, 174, 180, 158, 178, 182, 178, 179, 185, 129, 183, 187, 183, 184, 190, 132, 188, 192, 188, 189, 195, 128, 193, 197, 193, 194, 171, 124, 198, 173, 198, 199, 200, 174, 172, 202, 172, 173, 203, 194, 191, 205, 191, 192, 206, 184, 181, 208, 181, 182, 209, 136, 210, 169, 210, 168, 211, 162, 209, 166, 209, 169, 212, 161, 211, 163, 211, 166, 214, 213, 212, 130, 212, 163, 215, 140, 214, 131, 214, 130, 216, 139, 215, 152, 215, 131, 217, 155, 216, 133, 216, 152, 218, 154, 217, 134, 217, 133, 219, 148, 218, 149, 218, 134, 220, 143, 219, 150, 219, 149, 221, 142, 220, 126, 220, 150, 222, 157, 221, 127, 221, 126, 224, 223, 222, 151, 222, 127, 225, 146, 224, 125, 224, 151, 226, 145, 225, 123, 225, 125, 228, 227, 226, 159, 226, 123, 230, 229, 228, 164, 228, 159, 210, 137, 230, 168, 230, 164, 231, 229, 235, 232, 140, 138, 233, 146, 144, 234, 148, 147, 235, 137, 135, 236, 227, 231, 237, 162, 160, 238, 213, 232, 239, 223, 233, 179, 240, 261, 176, 241, 240, 189, 242, 262, 186, 243, 242, 199, 244, 263, 196, 245, 244, 202, 199, 263, 208, 179, 261, 245, 194, 204, 205, 189, 262, 243, 184, 207, 241, 174, 201)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="nUT" type="MeshInstance" parent="."]

mesh = SubResource(3)
visible = true
transform = Transform(0.756864, 0.0, 0.0, 0.0, 0.756864, 0.0, 0.0, 0.0, 0.756864, 0.0, 1.0, 0.0)
